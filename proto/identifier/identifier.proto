syntax = "proto3";
package allinbits.cosmoscash.identifier;

option go_package = "github.com/allinbits/cosmos-cash/x/identifier/types";

import "gogoproto/gogo.proto";

/*
This represents a minimal self-managed did document
definition: https://w3c.github.io/did-core/

{
  "@context": "https://www.w3.org/ns/did/v1",
  "id": "did:example:123456789abcdefghi",
  "authentication": [{
    "id": "did:example:123456789abcdefghi#keys-1",
    "type": "Ed25519VerificationKey2018",
    "controller": "did:example:123456789abcdefghi",
    "publicKeyBase58": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV"
  }],
  "service": [{
    "id":"did:example:123456789abcdefghi#vcs",
    "type": "VerifiableCredentialService",
    "serviceEndpoint": "https://example.com/vc/"
  }]
}
*/

// DidDocument represents a dencentralised identifer.
message DidDocument {
  // @context is spec for did document.
  string context= 1;

  // id represents the id for the did document.
  string id = 2;

  // authentication represents public key associated with the did document.
  repeated Authentication authentication = 3;

  // services represents each service associated with a did
  repeated Service services = 4;
}

// Authentication defines how to authenticate a did document.
message Authentication {
  option (gogoproto.equal) = true;

  string id          = 1;
  string type        = 2;
  string controller  = 3;
  string publicKey   = 4;
}

// Service defines how to find data associated with a identifer
message Service {
  option (gogoproto.equal) = true;

  string id          	 = 1;
  string type         	 = 2;
  string serviceEndpoint = 3;
}


