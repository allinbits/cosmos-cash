syntax = "proto3";
package allinbits.cosmoscash.identifier;

import "gogoproto/gogo.proto";
import "identifier/identifier.proto";

option go_package = "github.com/allinbits/cosmos-cash/x/identifier/types";

// Msg defines the identity Msg service.
service Msg {
  // CreateIdentifier defines a method for creating a new identity.
  rpc CreateIdentifier(MsgCreateIdentifier) returns (MsgCreateIdentifierResponse);
  // UpdateIdentifier defines a method for updating an identity.
  rpc UpdateIdentifier(MsgUpdateIdentifier) returns (MsgUpdateIdentifierResponse);

  // AddVerificationMethod adds a new verification method 
  rpc AddVerification(MsgAddVerification) returns (MsgAddVerificationResponse);
  // RevokeVerification remove the verification method and all associated verification Relations
  rpc RevokeVerification(MsgRevokeVerification) returns (MsgRevokeVerificationResponse);
  // SetVerificationRelationships overwrite current verification relationships
  rpc SetVerificationRelationships(MsgSetVerificationRelationships) returns (MsgSetVerificationRelationshipsResponse);

  // AddService add a new service
  rpc AddService(MsgAddService) returns (MsgAddServiceResponse);
  // DeleteService delete an existing service
  rpc DeleteService(MsgDeleteService) returns (MsgDeleteServiceResponse);
}

// Verification is a message that allows to assign a verification method
// to one or more verification relationships
message Verification {
  // verificationRelationships defines which relationships
  // are allowed to use the verification method
  repeated string    relationships = 1; // relationships that the method is allowed into.
  VerificationMethod method        = 2; // public key associated with the did document.
  repeated string    context       = 3; // additional contexts (json ld schemas)
}

// -------------------------------
// DID
// -------------------------------

// MsgCreateIdentifier defines a SDK message for creating a new identifier.
message MsgCreateIdentifier {
  option (gogoproto.equal)            = false;
  option (gogoproto.goproto_getters)  = false;

  string                id            = 1; // the did 
  string                controller    = 2; // the controller did
  repeated Verification verifications = 3; // the list of verification methods and relationships
  repeated Service      services      = 4; // the list of services
  string                signer        = 5; // address of the account signing the message 
}

message MsgCreateIdentifierResponse {}

message MsgUpdateIdentifier {
  option (gogoproto.equal)            = false;
  option (gogoproto.goproto_getters)  = false;

  string id         = 1; // the did
  string controller = 2; // the new controller
  string signer     = 5; // address of the account signing the message
}

message MsgUpdateIdentifierResponse {}

// -------------------------------
// Verification methods / relations
// -------------------------------

message MsgAddVerification {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string       id           = 1; // the did
  Verification verification = 2; // the verification to add
  string       signer       = 3; // address of the account signing the message
}

message MsgAddVerificationResponse {}

message MsgSetVerificationRelationships {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string          id            = 1; // the did
  string          method_id     = 2; // the verification method id
  repeated string relationships = 3; // the list of relationships to set
  string          signer        = 4; // address of the account signing the message
}

message MsgSetVerificationRelationshipsResponse {}

message MsgRevokeVerification {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string id        = 1; // the did
  string method_id = 2; // the verification method id
  string signer    = 3; // address of the account signing the message
}

message MsgRevokeVerificationResponse {}

// -------------------------------
// Services
// -------------------------------

message MsgAddService {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string  id           = 1; // the did
  Service service_data = 2; // the service data to add
  string signer        = 3; // address of the account signing the message 
}

message MsgAddServiceResponse {}

message MsgDeleteService {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string id         = 1; // the did
  string service_id = 2; // the service id
  string signer     = 3; // address of the account signing the message 
}

message MsgDeleteServiceResponse {}
