syntax = "proto3";
package allinbits.cosmoscash.verifiablecredentialservice;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "verifiable-credential-service/verifiable-credential.proto";
import "gogoproto/gogo.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/allinbits/cosmos-cash/x/verifiable-credential-service/types";

// Query defines the gRPC querier service.
service Query {
  	// Identifers queries all validators that match the given status.
  rpc VerifiableCredentials(QueryVerifiableCredentialsRequest) returns (QueryVerifiableCredentialsResponse) {
    option (google.api.http).get = "/allinbits/verifiablecredentials/verifiablecredentials";
  }
}

// QueryIdentifersRequest is request type for Query/Identifers RPC method.
message QueryVerifiableCredentialsRequest {
  // status enables to query for credentials matching a given status.
  string status = 1;

  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryIdentifersResponse is response type for the Query/Identifers RPC method
message QueryVerifiableCredentialsResponse {
  // validators contains all the queried validators.
  repeated VerifiableCredential vcs = 1  [(gogoproto.nullable) = false];


  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
