syntax = "proto3";
package allinbits.cosmoscash.verifiablecredentialservice;

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/allinbits/cosmos-cash/x/verifiable-credential-service/types";

import "gogoproto/gogo.proto";
import "verifiable-credential-service/verifiable-credential.proto";


// Msg defines the identity Msg service.
service Msg {
  rpc CreateVerifiableCredential(MsgCreateVerifiableCredential) returns (MsgCreateVerifiableCredentialResponse);
  rpc CreateIssuerVerifiableCredential(MsgCreateIssuerVerifiableCredential) returns (MsgCreateIssuerVerifiableCredentialResponse);
}

// MsgCreateVerifiableCredential defines a SDK message for creating a new identifer.
message MsgCreateVerifiableCredential {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  VerifiableCredential verifiable_credential = 1;

  // owner represents the user creating the message 
  string owner = 2;
}

message MsgCreateVerifiableCredentialResponse {}

message MsgCreateIssuerVerifiableCredential {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  VerifiableCredential verifiable_credential = 1;

  // owner represents the user creating the message 
  string owner = 2;
}

message MsgCreateIssuerVerifiableCredentialResponse {}
